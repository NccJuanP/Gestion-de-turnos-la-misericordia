@using System.Text.RegularExpressions
@*Modal de confirmar borrar*@

<div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
            </div>
            <div class="modal-body">
                <br>
                <center>
                    <h5>Â¿Esta seguro que desea borrar este usuario?</h5>
                </center>
                <br>
                <br>
            </div>
            <div class="modal-footer" id="modalDelete">

            </div>
        </div>
    </div>
</div>

@*Modal de exepcion atencion*@
<div class="modal fade" id="exampleModal2" tabindex="-1" aria-labelledby="exampleModalLabel2" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
            </div>
            <div class="modal-body">
                <br>
                <center>
                    <h5>Este Usuario Ya esta siendo llamado</h5>
                </center>
                <br>
                <br>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-success" data-bs-dismiss="modal">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                        class="bi bi-check-circle" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14m0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16" />
                        <path
                            d="m10.97 4.97-.02.022-3.473 4.425-2.093-2.094a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-1.071-1.05" />
                    </svg>
                    Confirmar
                </button>
            </div>
        </div>
    </div>
</div>

@*tabla de los usuarios*@
<table class="table">
    <thead>
        <tr>
            <th scope="col">Tipo de solitud</th>
            <th scope="col">Tiempo de espera</th>
            <th scope="col">Nombre Completo</th>
            <th scope="col">Documento</th>
            <th scope="col">Acciones</th>
        </tr>
    </thead>
    <tbody id="tbodyespera">
        @*tr para usuarios preferenciales hacer que aparezcan de primero sin importar su tiempo de espera*@
        @foreach (var item in Model)
        {
            if ((item.status == "LLAMANDO" || item.status == "ESPERA") && item.preferencias == 1)
            {
                TimeSpan diferencia = DateTime.Now - item.entrada;
                int minutos = (int)diferencia.TotalMinutes;
                string clase = "";
                Regex regex = new Regex("([A-Z]).");
                string varia = regex.Match(item.solicitud).ToString();
                switch (varia)
                {
                    case "GC":
                        clase = "table-primary";
                        break;

                    case "PF":
                        clase = "table-success";
                        break;

                    case "IG":
                        clase = "table-danger";
                        break;

                    case "AM":
                        clase = "table-warning";
                        break;
                }
                <tr class="@clase">
                    <th scope="row">
                        <p>preferencial</p> @item.solicitud
                    </th>
                    <td>@minutos MIN</td>
                    <td>@item.nombreCompleto</td>
                    <td>@item.tipoDocumento @item.numeroDocumento</td>
                    <td>
                        <a asp-action="GestionEsperaLlamar" asp-route-userId="@item.atentionId" type="button"
                            class="btn btn-primary"
                            onclick="enviarMensaje('@item.solicitud','@item.empleadollamada')">Llamar</a>
                        <a asp-action="GestionEsperaPasar" asp-route-userId="@item.atentionId" class="btn btn-success">Pasar</a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal"
                            onclick="userDelete(@item.atentionId,'@item.solicitud')">Borrar</button>
                    </td>
                </tr>
            }
        }

        @foreach (var item in Model)
        {
            if ((item.status == "LLAMANDO" || item.status == "ESPERA") && item.preferencias == 2)
            {
                TimeSpan diferencia = DateTime.Now - item.entrada;
                int minutos = (int)diferencia.TotalMinutes;
                string clase = "";
                Regex regex = new Regex("([A-Z]).");
                string varia = regex.Match(item.solicitud).ToString();
                switch (varia)
                {
                    case "GC":
                        clase = "table-primary";
                        break;

                    case "PF":
                        clase = "table-success";
                        break;

                    case "IG":
                        clase = "table-danger";
                        break;

                    case "AM":
                        clase = "table-warning";
                        break;
                }
                <tr class="@clase">
                    <th scope="row">@item.solicitud</th>
                    <td>@minutos MIN</td>
                    <td>@item.nombreCompleto</td>
                    <td>@item.tipoDocumento @item.numeroDocumento</td>
                    <td>
                        <button type="button" class="btn btn-primary"
                            onclick="enviarMensaje('@item.solicitud','@item.empleadollamada')">Llamar</button>
                        <a asp-action="GestionEsperaPasar" asp-route-userId="@item.atentionId" class="btn btn-success">Pasar</a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal"
                            onclick="userDelete(@item.atentionId,'@item.solicitud')">Borrar</button>
                    </td>
                </tr>
            }
        }
    </tbody>
</table>

<script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@5.0.8/dist/browser/signalr.min.js"></script>
<script>
    const connection = new signalR.HubConnectionBuilder()
        .withUrl("/chatHub")
        .build();

    connection.on("NuevoMensaje", (usuario, mensaje) => {
        $('#mensajes').append(`<li><strong>${usuario}:</strong> Modulo ${mensaje}</li>`);
    });

    connection.on("NuevoEspera", (preferencia,  turno, minutos,  nombre,  tipoDocumento,  numDocumento, attentionId, employeeId, userId) => {
      $('#' + turno).remove();
      $('#tbodyespera').append(`<tr class="table-primary" id="${turno}">
                    <th scope="row">
                        <p>preferencial</p> ${turno}
                    </th>
                    <td>${minutos} MIN</td>
                    <td>${nombre}</td>
                    <td>${tipoDocumento} ${numDocumento}</td>
                    <td>
                        <a type="button" class="btn btn-primary" onclick="enviarMensaje('${turno}','${employeeId}')" href="/Recepcion/GestionEsperaLlamar?userId=${userId}">Llamar</a>
                        <a class="btn btn-success" href="/Recepcion/GestionEsperaPasar?userId=${userId}">Pasar</a>
                        <button type="button" class="btn btn-danger" data-bs-toggle="modal" data-bs-target="#exampleModal" onclick="userDelete(${userId},'${turno}')">Borrar</button>
                    </td>
                </tr>`);
    });

    connection.on("Limpiar", (id) => {
        const smsid = id;
        connection.invoke("Limpiar", smsid);
    });

    connection.start().then(() => {
        console.log('Conectado al servidor SignalR');
    }).catch(err => console.error(err.toString()));

    function enviarMensaje(sms, empleado) {
        const usuario = sms;
        const mensaje = empleado;
        connection.invoke("EnviarMensaje", usuario, mensaje);
        $('#mensaje').val('');
    }
    function Limpiar(id) {
        connection.invoke("Limpiar", id);
    }

</script>